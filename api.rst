.. _ref_api_api:

#########
API
#########

It is easy to connect electronic devices, data sources, and even third party APPs to your account using Tago API (Application Programming Interface).

We have a comprehensive set of APIs that give you full control to manage your accounts, data, devices, dashboards, and scripts. For example, you can use the resources available in the Admin page to create, delete, or edit your accounts and dashboards; however, you can do all the same things directly using API.

We follow RESTful principles. Before checking the API documentation, there are some details you should know.

All responses from Tago API have a pattern, and you will always receive something like this:


.. code-block:: javascript

	// For success:
	{
		'status': true,
		'result': [...]
	}

	// For warning:
	{
		'status': true,
		'result': {...},
		'message': 'Warning message'
	}

	// For failed:
	{
		'status': false,
		'message': 'Error message'
	}

**status**: it is always boolean. If your request is successful the response will be **true**, otherwise it will be **false**.

**result**: can be any object type (that is dynamic object), depends what api endpoint you called for.

**message**: it is message from the server. Usually it is used when has any error or warning.

Security
********

Tago takes the necessary steps to protect your data in the database and also during the communication between our server and your devices.

All communication between the devices, your application, and Tago server is performed through Hypertext Transfer Protocol Secure (HTTPS) to avoid the man-in-the-middle and wiretapping attacks.

Although the communication can also be performed with HTTP, Tago doesn’t recommend it. By doing so will eliminate the security of authentication and encryption provided by SSL/TLS protocols part of HTTPS.

Secret tokens for account and devices are generated by Tago system and can be individually managed by the user. Different levels of access can be granted to different users or devices.

Tokens
******

There are two type of tokens: ``Account-Token`` and ``Device-Token``.

You are able to generate both tokens from Tago admin or directly using API. The type of token and its expiration can also be defined.

Using tokens is simple, just add them in the header of the request.

+----------------+-------------------------------+
| HEADER KEY     | HEADER VALUE                  |
+================+===============================+
| Account-Token  | Only Account Token            |
+----------------+-------------------------------+
| Device-Token   | Only Device Token             |
+----------------+-------------------------------+
| Authentication | Any Token (Account or Device) |
+----------------+-------------------------------+

Send Data
*********

POST - ``https://api.tago.io/data``

+----------------------+----------------------+----------------------+
| KEY                  | TYPE                 | REQUIRED             |
+======================+======================+======================+
| variable             | string               | yes                  |
+----------------------+----------------------+----------------------+
| unit                 | string               | no                   |
+----------------------+----------------------+----------------------+
| value                | string               | no                   |
+----------------------+----------------------+----------------------+
| time                 | string               | no                   |
+----------------------+----------------------+----------------------+
| location             | object || geojson    | no                   |
+----------------------+----------------------+----------------------+

Request

.. code-block:: json

	{
		"variable": "temperature",
		"unit"    : "F",
		"value"   : 55,
		"time"    : "2015-11-03 13:44:33",
		"location": {"lat": 42.2974279, "lng": -85.628292}
	}

Edit Data
*********

PUT - ``https://api.tago.io/data/:id``

- Each time you insert a data, an ID is associated with it. You can read this ID by using the GET method.

+----------------------+----------------------+----------------------+
| KEY                  | TYPE                 | REQUIRED             |
+======================+======================+======================+
| variable             | string               | no                   |
+----------------------+----------------------+----------------------+
| unit                 | string               | no                   |
+----------------------+----------------------+----------------------+
| value                | string               | no                   |
+----------------------+----------------------+----------------------+
| time                 | string               | no                   |
+----------------------+----------------------+----------------------+
| location             | object || geojson    | no                   |
+----------------------+----------------------+----------------------+

Request

.. code-block:: json

	{
		"unit"    : "C"
	}

Delete Data
***********

DELETE - ``https://api.tago.io/data/:id``
DELETE - ``https://api.tago.io/data``
DELETE - ``https://api.tago.io/data/:variable_name``

- Each time you insert a data, an ID is associated with it. You can read this ID by using the GET method.

Delete method can be used in 3 forms: without argument, with variable, or with ID.  If no argument is specified, the most recent data from your bucket will be removed.


GET Data
********

GET - ``https://api.tago.io/data``

+----------------------+----------------------+-------------------------------------------+
| KEY                  | TYPE                 | DESCRIPTION                               |
+======================+======================+===========================================+
| variable || s        | string || array      | Get variables                             |
+----------------------+----------------------+-------------------------------------------+
| query                | string               | Query pre-defined by Tago                 |
+----------------------+----------------------+-------------------------------------------+
| qty                  | string               | Maximum number of register to be returned |
+----------------------+----------------------+-------------------------------------------+
| filter               | string || array      | Fields to be returned                     |
+----------------------+----------------------+-------------------------------------------+
| start_date           | string               | Startd date                               |
+----------------------+----------------------+-------------------------------------------+
| end_date             | string               | End date                                  |
+----------------------+----------------------+-------------------------------------------+

Response - Bellow is data without any parameters. ``https://api.tago.io/data``

.. code-block:: json

	{
	    "status" : true,
	    "result": [
	        {
	            "id": "547e42847dbf3af122c02582",
	            "location": {
	                "coordinates": [
	                    41.878876,
	                    -87.635915
	                ],
	                "type": "Point"
	            },
	            "time": "2014-12-02T22:51:48.005Z",
	            "variable": "location"
	        }, {
	            "id": "547e353d7dbf3af122c0257d",
	            "time": "2014-12-02T21:55:09.301Z",
	            "unit": "%",
	            "value": "32",
	            "variable": "fuel_level"
	        },  {
	            "id": "547e41f97dbf3af122c02580",
	            "time": "2014-12-02T22:49:29.777Z",
	            "unit": "psi",
	            "value": "25",
	            "variable": "oil_pressure"
	        }
	    ]
	}

Variables
=========

``variable`` - using parameter variable you select what variable you wanna get.

Example to get only data with variable equal *temperature*: ``https://api.tago.io/data?variable=temperature``.

Also you can use array: ``https://api.tago.io/data?variable[]=temperature&variable[]=pressure``

Query
=====

``query`` - query parameter is pre defined by Tago, that is functions to help go direct the point. This parameter will always be in development.
Also you can not use two querys concurrent.

+---------------+---------------------------------------------------+
| QUERY         | DESCRIPTION                                       |
+===============+===================================================+
| max           | Get data with highest value.                      |
+---------------+---------------------------------------------------+
| min           | Get data with lowest value.                       |
+---------------+---------------------------------------------------+
| count         | Return number of data in bucket.                  |
+---------------+---------------------------------------------------+
| lat_value     | Get last data with field *value* is not empty.    |
+---------------+---------------------------------------------------+
| last_location | Get last data with field *location* is not empty. |
+---------------+---------------------------------------------------+
| last_item     | Get last data.                                    |
+---------------+---------------------------------------------------+
| near*         | Get location near where you wanna.                |
+---------------+---------------------------------------------------+

\* - Need additional parameter.

Quantity
========

``qty`` - That is quantity of data you will get. default is 15.

Filter
======

``filter`` - Choose what fields on data you wanna.

Start Date - End Date
=====================

``start_date`` - Set when you start get the data. (from field *time*)

``end_date`` - Set when you stop get the data. (from field *time*)

That parameter accept so much formats, bellow examples:

+--------------------------------------------+
| DATE FORMATS                               |
+============================================+
| "2014-12-25"                               |
+--------------------------------------------+
| "2014-12-25 23:33:22"                      |
+--------------------------------------------+
| "Thu Dec 25 2014 23:33:22 GMT+1300 (NZDT)" |
+--------------------------------------------+
| "1 hour"                                   |
+--------------------------------------------+
| "1 day"                                    |
+--------------------------------------------+
| "1 month"                                  |
+--------------------------------------------+
| "1 year"                                   |
+--------------------------------------------+

- Relative dates will subtract or add that time.
